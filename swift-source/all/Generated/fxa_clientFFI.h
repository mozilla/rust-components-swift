// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree _Nonnull free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureStructU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureStructI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureStructU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureStructI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureStructU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureStructI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureStructU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureStructI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureStructF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureStructF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void*_Nonnull returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t, UniffiForeignFutureStructPointer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureStructRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureStructVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CLONE_FIREFOXACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CLONE_FIREFOXACCOUNT
void*_Nonnull uniffi_fxa_client_fn_clone_firefoxaccount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_FREE_FIREFOXACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_FREE_FIREFOXACCOUNT
void uniffi_fxa_client_fn_free_firefoxaccount(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CONSTRUCTOR_FIREFOXACCOUNT_FROM_JSON
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CONSTRUCTOR_FIREFOXACCOUNT_FROM_JSON
void*_Nonnull uniffi_fxa_client_fn_constructor_firefoxaccount_from_json(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CONSTRUCTOR_FIREFOXACCOUNT_NEW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CONSTRUCTOR_FIREFOXACCOUNT_NEW
void*_Nonnull uniffi_fxa_client_fn_constructor_firefoxaccount_new(RustBuffer config, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_AUTHORIZE_CODE_USING_SESSION_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_AUTHORIZE_CODE_USING_SESSION_TOKEN
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_authorize_code_using_session_token(void*_Nonnull ptr, RustBuffer params, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_BEGIN_OAUTH_FLOW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_BEGIN_OAUTH_FLOW
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_begin_oauth_flow(void*_Nonnull ptr, RustBuffer scopes, RustBuffer entrypoint, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_BEGIN_PAIRING_FLOW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_BEGIN_PAIRING_FLOW
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_begin_pairing_flow(void*_Nonnull ptr, RustBuffer pairing_url, RustBuffer scopes, RustBuffer entrypoint, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CHECK_AUTHORIZATION_STATUS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CHECK_AUTHORIZATION_STATUS
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_check_authorization_status(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CLEAR_ACCESS_TOKEN_CACHE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CLEAR_ACCESS_TOKEN_CACHE
void uniffi_fxa_client_fn_method_firefoxaccount_clear_access_token_cache(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CLEAR_DEVICE_NAME
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CLEAR_DEVICE_NAME
void uniffi_fxa_client_fn_method_firefoxaccount_clear_device_name(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CLOSE_TABS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_CLOSE_TABS
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_close_tabs(void*_Nonnull ptr, RustBuffer target_device_id, RustBuffer urls, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_COMPLETE_OAUTH_FLOW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_COMPLETE_OAUTH_FLOW
void uniffi_fxa_client_fn_method_firefoxaccount_complete_oauth_flow(void*_Nonnull ptr, RustBuffer code, RustBuffer state, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_DISCONNECT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_DISCONNECT
void uniffi_fxa_client_fn_method_firefoxaccount_disconnect(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_ENSURE_CAPABILITIES
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_ENSURE_CAPABILITIES
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_ensure_capabilities(void*_Nonnull ptr, RustBuffer supported_capabilities, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GATHER_TELEMETRY
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GATHER_TELEMETRY
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_gather_telemetry(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_ACCESS_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_ACCESS_TOKEN
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_access_token(void*_Nonnull ptr, RustBuffer scope, RustBuffer ttl, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_ATTACHED_CLIENTS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_ATTACHED_CLIENTS
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_attached_clients(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_AUTH_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_AUTH_STATE
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_auth_state(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_CONNECTION_SUCCESS_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_CONNECTION_SUCCESS_URL
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_connection_success_url(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_CURRENT_DEVICE_ID
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_CURRENT_DEVICE_ID
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_current_device_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_DEVICES
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_DEVICES
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_devices(void*_Nonnull ptr, int8_t ignore_cache, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_MANAGE_ACCOUNT_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_MANAGE_ACCOUNT_URL
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_manage_account_url(void*_Nonnull ptr, RustBuffer entrypoint, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_MANAGE_DEVICES_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_MANAGE_DEVICES_URL
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_manage_devices_url(void*_Nonnull ptr, RustBuffer entrypoint, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_PAIRING_AUTHORITY_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_PAIRING_AUTHORITY_URL
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_pairing_authority_url(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_PROFILE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_PROFILE
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_profile(void*_Nonnull ptr, int8_t ignore_cache, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_SESSION_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_SESSION_TOKEN
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_session_token(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_STATE
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_state(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_TOKEN_SERVER_ENDPOINT_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_GET_TOKEN_SERVER_ENDPOINT_URL
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_get_token_server_endpoint_url(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_HANDLE_PUSH_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_HANDLE_PUSH_MESSAGE
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_handle_push_message(void*_Nonnull ptr, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_HANDLE_SESSION_TOKEN_CHANGE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_HANDLE_SESSION_TOKEN_CHANGE
void uniffi_fxa_client_fn_method_firefoxaccount_handle_session_token_change(void*_Nonnull ptr, RustBuffer session_token, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_INITIALIZE_DEVICE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_INITIALIZE_DEVICE
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_initialize_device(void*_Nonnull ptr, RustBuffer name, RustBuffer device_type, RustBuffer supported_capabilities, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_ON_AUTH_ISSUES
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_ON_AUTH_ISSUES
void uniffi_fxa_client_fn_method_firefoxaccount_on_auth_issues(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_POLL_DEVICE_COMMANDS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_POLL_DEVICE_COMMANDS
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_poll_device_commands(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_PROCESS_EVENT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_PROCESS_EVENT
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_process_event(void*_Nonnull ptr, RustBuffer event, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SEND_SINGLE_TAB
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SEND_SINGLE_TAB
void uniffi_fxa_client_fn_method_firefoxaccount_send_single_tab(void*_Nonnull ptr, RustBuffer target_device_id, RustBuffer title, RustBuffer url, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SET_DEVICE_NAME
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SET_DEVICE_NAME
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_set_device_name(void*_Nonnull ptr, RustBuffer display_name, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SET_PUSH_SUBSCRIPTION
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SET_PUSH_SUBSCRIPTION
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_set_push_subscription(void*_Nonnull ptr, RustBuffer subscription, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SET_USER_DATA
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SET_USER_DATA
void uniffi_fxa_client_fn_method_firefoxaccount_set_user_data(void*_Nonnull ptr, RustBuffer user_data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SIMULATE_NETWORK_ERROR
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SIMULATE_NETWORK_ERROR
void uniffi_fxa_client_fn_method_firefoxaccount_simulate_network_error(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SIMULATE_PERMANENT_AUTH_TOKEN_ISSUE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SIMULATE_PERMANENT_AUTH_TOKEN_ISSUE
void uniffi_fxa_client_fn_method_firefoxaccount_simulate_permanent_auth_token_issue(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SIMULATE_TEMPORARY_AUTH_TOKEN_ISSUE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_SIMULATE_TEMPORARY_AUTH_TOKEN_ISSUE
void uniffi_fxa_client_fn_method_firefoxaccount_simulate_temporary_auth_token_issue(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_TO_JSON
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FIREFOXACCOUNT_TO_JSON
RustBuffer uniffi_fxa_client_fn_method_firefoxaccount_to_json(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CLONE_FXASTATEMACHINECHECKER
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CLONE_FXASTATEMACHINECHECKER
void*_Nonnull uniffi_fxa_client_fn_clone_fxastatemachinechecker(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_FREE_FXASTATEMACHINECHECKER
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_FREE_FXASTATEMACHINECHECKER
void uniffi_fxa_client_fn_free_fxastatemachinechecker(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CONSTRUCTOR_FXASTATEMACHINECHECKER_NEW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_CONSTRUCTOR_FXASTATEMACHINECHECKER_NEW
void*_Nonnull uniffi_fxa_client_fn_constructor_fxastatemachinechecker_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_CHECK_INTERNAL_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_CHECK_INTERNAL_STATE
void uniffi_fxa_client_fn_method_fxastatemachinechecker_check_internal_state(void*_Nonnull ptr, RustBuffer state, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_CHECK_PUBLIC_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_CHECK_PUBLIC_STATE
void uniffi_fxa_client_fn_method_fxastatemachinechecker_check_public_state(void*_Nonnull ptr, RustBuffer state, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_HANDLE_INTERNAL_EVENT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_HANDLE_INTERNAL_EVENT
void uniffi_fxa_client_fn_method_fxastatemachinechecker_handle_internal_event(void*_Nonnull ptr, RustBuffer event, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_HANDLE_PUBLIC_EVENT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_FN_METHOD_FXASTATEMACHINECHECKER_HANDLE_PUBLIC_EVENT
void uniffi_fxa_client_fn_method_fxastatemachinechecker_handle_public_event(void*_Nonnull ptr, RustBuffer event, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_ALLOC
RustBuffer ffi_fxa_client_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_fxa_client_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_FREE
void ffi_fxa_client_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUSTBUFFER_RESERVE
RustBuffer ffi_fxa_client_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U8
void ffi_fxa_client_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U8
void ffi_fxa_client_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U8
void ffi_fxa_client_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_fxa_client_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I8
void ffi_fxa_client_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I8
void ffi_fxa_client_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I8
void ffi_fxa_client_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I8
int8_t ffi_fxa_client_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U16
void ffi_fxa_client_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U16
void ffi_fxa_client_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U16
void ffi_fxa_client_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_fxa_client_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I16
void ffi_fxa_client_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I16
void ffi_fxa_client_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I16
void ffi_fxa_client_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I16
int16_t ffi_fxa_client_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U32
void ffi_fxa_client_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U32
void ffi_fxa_client_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U32
void ffi_fxa_client_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_fxa_client_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I32
void ffi_fxa_client_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I32
void ffi_fxa_client_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I32
void ffi_fxa_client_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I32
int32_t ffi_fxa_client_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_U64
void ffi_fxa_client_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_U64
void ffi_fxa_client_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_U64
void ffi_fxa_client_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_fxa_client_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_I64
void ffi_fxa_client_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_I64
void ffi_fxa_client_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_I64
void ffi_fxa_client_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_I64
int64_t ffi_fxa_client_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_F32
void ffi_fxa_client_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_F32
void ffi_fxa_client_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_F32
void ffi_fxa_client_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_F32
float ffi_fxa_client_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_F64
void ffi_fxa_client_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_F64
void ffi_fxa_client_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_F64
void ffi_fxa_client_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_F64
double ffi_fxa_client_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_POINTER
void ffi_fxa_client_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_POINTER
void ffi_fxa_client_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_POINTER
void ffi_fxa_client_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_POINTER
void*_Nonnull ffi_fxa_client_rust_future_complete_pointer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_fxa_client_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_fxa_client_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_fxa_client_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_fxa_client_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_POLL_VOID
void ffi_fxa_client_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_CANCEL_VOID
void ffi_fxa_client_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_FREE_VOID
void ffi_fxa_client_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_RUST_FUTURE_COMPLETE_VOID
void ffi_fxa_client_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_AUTHORIZE_CODE_USING_SESSION_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_AUTHORIZE_CODE_USING_SESSION_TOKEN
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_authorize_code_using_session_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_BEGIN_OAUTH_FLOW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_BEGIN_OAUTH_FLOW
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_begin_oauth_flow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_BEGIN_PAIRING_FLOW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_BEGIN_PAIRING_FLOW
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_begin_pairing_flow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CHECK_AUTHORIZATION_STATUS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CHECK_AUTHORIZATION_STATUS
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_check_authorization_status(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CLEAR_ACCESS_TOKEN_CACHE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CLEAR_ACCESS_TOKEN_CACHE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_clear_access_token_cache(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CLEAR_DEVICE_NAME
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CLEAR_DEVICE_NAME
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_clear_device_name(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CLOSE_TABS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_CLOSE_TABS
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_close_tabs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_COMPLETE_OAUTH_FLOW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_COMPLETE_OAUTH_FLOW
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_complete_oauth_flow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_DISCONNECT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_DISCONNECT
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_disconnect(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_ENSURE_CAPABILITIES
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_ENSURE_CAPABILITIES
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_ensure_capabilities(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GATHER_TELEMETRY
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GATHER_TELEMETRY
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_gather_telemetry(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_ACCESS_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_ACCESS_TOKEN
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_access_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_ATTACHED_CLIENTS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_ATTACHED_CLIENTS
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_attached_clients(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_AUTH_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_AUTH_STATE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_auth_state(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_CONNECTION_SUCCESS_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_CONNECTION_SUCCESS_URL
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_connection_success_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_CURRENT_DEVICE_ID
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_CURRENT_DEVICE_ID
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_current_device_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_DEVICES
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_DEVICES
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_devices(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_MANAGE_ACCOUNT_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_MANAGE_ACCOUNT_URL
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_manage_account_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_MANAGE_DEVICES_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_MANAGE_DEVICES_URL
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_manage_devices_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_PAIRING_AUTHORITY_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_PAIRING_AUTHORITY_URL
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_pairing_authority_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_PROFILE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_PROFILE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_profile(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_SESSION_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_SESSION_TOKEN
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_session_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_STATE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_state(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_TOKEN_SERVER_ENDPOINT_URL
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_GET_TOKEN_SERVER_ENDPOINT_URL
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_get_token_server_endpoint_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_HANDLE_PUSH_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_HANDLE_PUSH_MESSAGE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_handle_push_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_HANDLE_SESSION_TOKEN_CHANGE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_HANDLE_SESSION_TOKEN_CHANGE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_handle_session_token_change(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_INITIALIZE_DEVICE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_INITIALIZE_DEVICE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_initialize_device(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_ON_AUTH_ISSUES
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_ON_AUTH_ISSUES
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_on_auth_issues(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_POLL_DEVICE_COMMANDS
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_POLL_DEVICE_COMMANDS
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_poll_device_commands(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_PROCESS_EVENT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_PROCESS_EVENT
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_process_event(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SEND_SINGLE_TAB
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SEND_SINGLE_TAB
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_send_single_tab(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SET_DEVICE_NAME
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SET_DEVICE_NAME
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_set_device_name(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SET_PUSH_SUBSCRIPTION
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SET_PUSH_SUBSCRIPTION
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_set_push_subscription(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SET_USER_DATA
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SET_USER_DATA
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_set_user_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SIMULATE_NETWORK_ERROR
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SIMULATE_NETWORK_ERROR
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_simulate_network_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SIMULATE_PERMANENT_AUTH_TOKEN_ISSUE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SIMULATE_PERMANENT_AUTH_TOKEN_ISSUE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_simulate_permanent_auth_token_issue(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SIMULATE_TEMPORARY_AUTH_TOKEN_ISSUE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_SIMULATE_TEMPORARY_AUTH_TOKEN_ISSUE
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_simulate_temporary_auth_token_issue(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_TO_JSON
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FIREFOXACCOUNT_TO_JSON
uint16_t uniffi_fxa_client_checksum_method_firefoxaccount_to_json(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_CHECK_INTERNAL_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_CHECK_INTERNAL_STATE
uint16_t uniffi_fxa_client_checksum_method_fxastatemachinechecker_check_internal_state(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_CHECK_PUBLIC_STATE
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_CHECK_PUBLIC_STATE
uint16_t uniffi_fxa_client_checksum_method_fxastatemachinechecker_check_public_state(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_HANDLE_INTERNAL_EVENT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_HANDLE_INTERNAL_EVENT
uint16_t uniffi_fxa_client_checksum_method_fxastatemachinechecker_handle_internal_event(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_HANDLE_PUBLIC_EVENT
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_METHOD_FXASTATEMACHINECHECKER_HANDLE_PUBLIC_EVENT
uint16_t uniffi_fxa_client_checksum_method_fxastatemachinechecker_handle_public_event(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_CONSTRUCTOR_FIREFOXACCOUNT_FROM_JSON
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_CONSTRUCTOR_FIREFOXACCOUNT_FROM_JSON
uint16_t uniffi_fxa_client_checksum_constructor_firefoxaccount_from_json(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_CONSTRUCTOR_FIREFOXACCOUNT_NEW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_CONSTRUCTOR_FIREFOXACCOUNT_NEW
uint16_t uniffi_fxa_client_checksum_constructor_firefoxaccount_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_CONSTRUCTOR_FXASTATEMACHINECHECKER_NEW
#define UNIFFI_FFIDEF_UNIFFI_FXA_CLIENT_CHECKSUM_CONSTRUCTOR_FXASTATEMACHINECHECKER_NEW
uint16_t uniffi_fxa_client_checksum_constructor_fxastatemachinechecker_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_FXA_CLIENT_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_FXA_CLIENT_UNIFFI_CONTRACT_VERSION
uint32_t ffi_fxa_client_uniffi_contract_version(void
    
);
#endif

